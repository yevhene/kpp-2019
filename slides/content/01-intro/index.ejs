<section>
  <h1>Вступ</h1>
  <h2>Лекція 1</h2>
</section>

<section>
  <h2>Крос-платформне програмування</h2>

  <section>
    <h3>Це написання коду що може бути виконаний на різних платформах.</h3>
  </section>

  <section>
    <h3>Основа курсу - мова JavaScript.</h3>
  </section>
</section>

<section>
  <h2>Чому JavaScript?</h2>

  <section>
    <h3>JavaScript у Браузері</h3>

    <h4>Єдина доступна мова</h4>
  </section>

  <section>
    <h3>JavaScript на Мабільних</h3>

    <img src="images/javascript-mobile.gif" />
  </section>

  <section>
    <h3>JavaScript на Робочому столі</h3>

    <img src="images/javascript-desktop.gif" />
  </section>

  <section>
    <h3>JavaScript у Віртуальній реальності</h3>

    <img src="images/javascript-virtual-reality.gif" />
  </section>

  <section>
    <h3>JavaScript на Пристроях</h3>

    <img src="images/javascript-hardware.gif" />
  </section>

  <section>
    <h3>JavaScript ...</h3>

    <ul>
      <li>в Базах Даних</li>
      <li>в Терміналі</li>
      <li>на Сервері</li>
      <li>в Іграх</li>
      <li>...</li>
    </ul>
  </section>
</section>

<section>
  <h2>Що таке JavaScript?</h2>

  <section>
    <p><strong>JavaScript</strong> - високорівнева, інтерпретована мова програмування що керується специфікацією ECMAScript. Її характеризують, як динамічну, слабко типізовану, прототипну і мультипарадигмальну.</p>
  </section>

  <section>
    <p><strong>Високорівнева</strong> - нам не доведеться керувати пам'яттю та іншими апаратними ресурсами.</p>

    <small>На противагу мові C або мові асемблеру, що потребують безпосереднього керування пам'яттю і тому вважаються <i>низькорівневими</i>.</small>
  </section>

  <section>
    <p><strong>Iнтерпретована</strong> - немає необхідності компілювати перед запуском, перетворенням программи у машинні коди займається спеціальна програма <i>Інтерпретатор</i>, що починає свою роботу під час запуску програми.</p>

    <small>На противагу мові C або Haskell, що потребують попередньої компіляції і тому називаються <i>компільованими</i>.</small>
  </section>

  <section>
    <p><strong>Динамічна</strong> - дозволяє визначати типи даних і здійснювати синтаксичний аналіз і компіляцію «на льоту», безпосередньо на етапі виконання.</p>

    <small>На противагу <i>статичним</i> мовам C++ або Java, що потребують визначення типів заздалегідь.</small>
  </section>

  <section>
    <p><strong>Слабко типізована</strong> - за рахунок можливості неявного приведення типів.</p>

    <small>На противагу мовам із <i>сильною типізацією</i>, таким як Python або Java, що не дозволяють неявного приведення типів.</small>
  </section>

  <section>
    <p><strong>Прототипна</strong> - що використовує Прототипи (замість Класів), як основу для Об'єктно-Орієнтованого Програмування.</p>

    <small>На противагу мовам C++ та Java що використовую Класи, як основу для ООП.</small>
  </section>

  <section>
    <p><strong>Мультипарадигмальна</strong> - що використовує різні парадигми, як засади до створення мови.</p>

    <ul>
      <li><strong>Процедурна</strong> - програми будуються на основі Процедур та Функцій;</li>
      <li><strong>Об'єктно-Орієнована</strong> - реалізує ООП на базі Прототипів;</li>
      <li><strong>Функціональна</strong> - Функції першого класу та Функції вищих порядків.</li>
    </ul>
  </section>
</section>

<section>
  <h2>Створення</h2>

  <section>
    <h3>JavaScript</h3>

    <p><b>Брендан Айк</b> розробив у Грудні 1995-го, для компанії <b>Netscape</b> мову програмування <i>Mocha</i>, пізніше <i>LiveScript</i>, і через деякий час нарешті <i>JavaScript</i>.</p>
  </section>

  <section>
    <h3>JScript</h3>

    <p><b>Microsoft</b> щоб уникнути проблем з торговою маркою, у Серпні 1996-го, створила <i>JScript</i>. Що частково відрізнявся від <i>JavaScript</i>.</p>
  </section>

  <section>
    <h3>ECMAScript</h3>

    <p><b>Netscape</b> у Лістопаді 1996-го почала процес стандартизаці, за допомогою компанії <i>Ecma International</i>. Новий стандарт <i>ECMA-262</i>, за згодою учасників, до складу яких приєднався згодом <b>Microsoft</b>, отримав назву <i>ECMAScript</i>.</p>
  </section>

  <section>
    <h3>TC39</h3>

    <p><b>Technical Committee 39</b> займається розробкою і розвитком стандарту <i>ECMAScript</i>.</p>
  </section>
</section>

<section>
  <h2>Розвиток</h2>

  <section>
    <h3>Ранні версії</h3>

    <table>
      <thead>
        <tr><th>Версія</th><th>Дата</th><th>Зміни</th></tr>
      </thead>

      <tbody>
        <tr><td>1</td><td>Червень 1997</td><td></td></tr>
        <tr><td>2</td><td>Червень 1998</td><td>Узгоджено зі стандартом ISO/IEC 16262</td></tr>
        <tr><td>3</td><td>Грудень 1999</td><td>Регулярні вирази, обробки винятків</td></tr>
      </tbody>
    </table>
  </section>

  <section>
    <h3>4-а версія</h3>

    <table>
      <thead>
        <tr><th>Версія</th><th>Дата</th><th>Зміни</th></tr>
      </thead>

      <tbody>
        <tr><td>4</td><td>не випущена</td><td>Класи, модулі, статична типізація, генератори, ітератори, деструктивне просвоєння, алгебраїчні типи даних</td></tr>
      </tbody>
    </table>
  </section>

  <section>
    <h3>5-а версія</h3>

    <table>
      <thead>
        <tr><th>Версія</th><th>Дата</th><th>Зміни</th></tr>
      </thead>

      <tbody>
        <tr><td>5</td><td>Грудень 2001</td><td>"strict mode", JSON, рефлексія, численні виправлення та прояснення</td></tr>
        <tr><td>5.1</td><td>Червень 2001</td><td>Узгоджено зі стандартом ISO/IEC 16262:2011</td></tr>
      </tbody>
    </table>
  </section>

  <section>
    <table>
      <thead>
        <tr><th>Версія</th><th>Дата</th><th>Зміни</th></tr>
      </thead>

      <tbody>
        <tr><td>6 (2015)</td><td>Червень 2015</td><td>Класи, модулі, генератори, ітератори, деструктивне просвоєння, обіцянки, рефлексія, проксі</td></tr>
        <tr><td>7 (2016)</td><td>Червень 2016</td><td>Експонента **, Array.prototype.includes</td></tr>
        <tr><td>8 (2017)</td><td>Червень 2017</td><td>async/await, SIMD, метапрограмування</td></tr>
        <tr><td>9 (2018)</td><td>Червень 2018</td><td>Асинхронні ітератори/генератори</td></tr>
      </tbody>
    </table>
  </section>
</section>

<section>
  <h2>Питання?</h2>
</section>
